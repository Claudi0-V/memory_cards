{"version":3,"sources":["Components/Images.js","Components/cardImages.js","cards/01.jpg","cards/02.png","cards/03.png","cards/04.jpg","cards/05.png","cards/06.png","cards/07.png","cards/08.jpg","cards/09.png","cards/10.jpg","cards/11.jpg","cards/12.png","cards/13.png","cards/14.jpg","cards/15.png","Components/Navbar.js","Components/Modals/Tutorial.js","Components/Modals/Game.js","Components/Modals/WinGame.js","Components/Modals.js","Components/FirstGameContent.js","helperFunctions.js","App.js","index.js"],"names":["Images","props","cards","handleClick","map","obj","index","name","src","className","onClick","event","alt","cardList","Navbar","scores","currentScore","bestScore","setFirstGame","class","Tutorial","data","step","handleModal","style","textAlign","Game","resetGame","WinGame","Modals","type","FirstGameContent","shuffler","array","newArray","i","length","j","Math","floor","random","shuffledCardsSetter","firstSetter","secondSetter","shuffled","CardsList","getFromLocalStorage","item","altValue","saved","JSON","parse","localStorage","getItem","App","useState","initialCards","setInitialCards","setCards","round","setRound","setCurrentScore","setBestScore","firstRound","setFirstRound","firstGame","setStep","winGame","setWinGame","endGame","setEndGame","useEffect","prevState","setItem","stringify","target","startGame","isFinalRound","doesNameMatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAsBeA,MApBf,SAAgBC,GACd,IAAQC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YAEf,OAAOD,EAAME,KAAI,SAACC,EAAKC,GACrB,IAAQC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,IACd,OACE,sBACEC,UAAU,YAEVC,QAAS,SAACC,GAAD,OAAWR,EAAYI,IAHlC,UAKE,qBAAKC,IAAKA,EAAKI,IAAG,oBAAeL,KACjC,qBAAKE,UAAU,gBAAf,SACE,mBAAGA,UAAU,YAAb,SAA0BF,QALvBD,OCwBEO,G,YAlBE,CACf,CAAEN,KAAM,cAAeC,ICjBV,IAA0B,gCDkBvC,CAAED,KAAM,SAAUC,IElBL,IAA0B,gCFmBvC,CAAED,KAAM,UAAWC,IGnBN,IAA0B,gCHoBvC,CAAED,KAAM,UAAWC,IIpBN,IAA0B,gCJqBvC,CAAED,KAAM,QAASC,IKrBJ,IAA0B,gCLsBvC,CAAED,KAAM,SAAUC,IMtBL,IAA0B,gCNuBvC,CAAED,KAAM,WAAYC,IOvBP,IAA0B,gCPwBvC,CAAED,KAAM,aAAcC,IQxBT,IAA0B,gCRyBvC,CAAED,KAAM,QAASC,ISzBJ,IAA0B,gCT0BvC,CAAED,KAAM,OAAQC,IU1BH,IAA0B,gCV2BvC,CAAED,KAAM,SAAUC,IW3BL,IAA0B,gCX4BvC,CAAED,KAAM,QAASC,IY5BJ,IAA0B,gCZ6BvC,CAAED,KAAM,YAAaC,Ia7BR,IAA0B,gCb8BvC,CAAED,KAAM,SAAUC,Ic9BL,IAA0B,gCd+BvC,CAAED,KAAM,aAAcC,Ie/BT,IAA0B,kCCkB1BM,MAlBf,SAAgBb,GACd,MAAkCA,EAAMc,OAAjCC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,UACdC,EAAgBjB,EAAhBiB,aACP,OACE,gCACE,sBAAKT,UAAU,SAAf,UACE,+CACA,8BAAIO,EAAJ,UAEF,sBAAKP,UAAU,SAAf,UACE,2CACA,4BAAIQ,OAEN,qBAAKR,UAAU,SAAf,SAAwB,mBAAGU,MAAM,gBAAgBT,QAAS,kBAAMQ,GAAa,IAArD,qBCWfE,MAxBf,SAAkBnB,GAChB,IAAQoB,EAA4BpB,EAA5BoB,KAAMC,EAAsBrB,EAAtBqB,KAAMC,EAAgBtB,EAAhBsB,YACpB,OACE,sBAAKd,UAAU,eAAf,UACE,oBAAIe,MAAO,CAACC,UAAW,UAAvB,SAAmCJ,EAAKC,KACxC,sBAAKb,UAAU,uBAAf,UACGa,EAAO,GACN,wBAAQf,KAAK,WAAWE,UAAU,kBAAkBC,QAAS,SAACC,GAAD,OAAWY,EAAYZ,IAApF,sBAIF,wBAAQJ,KAAK,SAASE,UAAU,gBAAgBC,QAAS,SAACC,GAAD,OAAWY,EAAYZ,IAAhF,oBAGCW,EAAO,GACN,wBAAQf,KAAK,OAAOE,UAAU,cAAcC,QAAS,SAACC,GAAD,OAAWY,EAAYZ,IAA5E,yBCHKe,MAVf,SAAczB,GACZ,IAAQ0B,EAAc1B,EAAd0B,UACR,OACE,sBAAKlB,UAAU,gBAAf,UACE,sDACA,wBAAQC,QAAS,kBAAMiB,KAAvB,0BCKSC,MAVf,SAAiB3B,GACf,IAAO0B,EAAa1B,EAAb0B,UACP,OACE,sBAAKlB,UAAU,YAAf,UACE,oDACA,wBAAQC,QAAS,kBAAMiB,KAAvB,0BCaSE,MAff,SAAgB5B,GACd,IAAQoB,EAA6CpB,EAA7CoB,KAAMC,EAAuCrB,EAAvCqB,KAAMC,EAAiCtB,EAAjCsB,YAAaO,EAAoB7B,EAApB6B,KAAMH,EAAc1B,EAAd0B,UACvC,OACE,qBAAKlB,UAAU,kBAAf,SACE,sBAAKA,UAAU,QAAf,UACY,aAATqB,GACC,cAAC,EAAD,CAAUT,KAAMA,EAAMC,KAAMA,EAAMC,YAAaA,IAEvC,aAATO,GAAuB,cAAC,EAAD,CAAMH,UAAWA,IACvC,YAATG,GAAsB,cAAC,EAAD,CAASH,UAAWA,UCT5BI,EAFU,CAHP,uGACC,+HACD,sE,OCAlB,SAASC,EAASC,GAEhB,IADA,IAAMC,EAAQ,YAAOD,GACZE,EAAID,EAASE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC5C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADE,EAEf,CAACD,EAASG,GAAIH,EAASC,IAAnDD,EAASC,GAFkC,KAE9BD,EAASG,GAFqB,KAI9C,OAAOH,EAGT,SAASO,EAAoBC,EAAaC,GACxC,IAAMC,EAAWZ,EAASa,GAC1BH,EAAYE,GACZD,EAAaC,GAGf,SAASE,EAAoBC,EAAMC,GACjC,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQN,IAC9C,MAAqB,mBAAVE,IAAiC,IAAVA,EACzBA,EAEFA,GAASD,ECgGHM,MAvGf,WACE,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOrD,EAAP,KAAcwD,EAAd,KACA,EAA0BH,mBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAwCL,mBAAS,GAAjD,mBAAOvC,EAAP,KAAqB6C,EAArB,KACA,EAAkCN,mBAChCT,EAAoB,YAAa,IADnC,mBAAO7B,EAAP,KAAkB6C,EAAlB,KAGA,EAAoCP,oBAAS,GAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KACA,EAAkCT,mBAChCT,EAAoB,aAAa,IADnC,mBAAOmB,EAAP,KAAkB/C,EAAlB,KAGA,EAAwBqC,mBAAS,GAAjC,mBAAOjC,EAAP,KAAa4C,EAAb,KACA,EAA8BX,oBAAS,GAAvC,mBAAOY,EAAP,KAAgBC,EAAhB,KACA,EAA8Bb,oBAAS,GAAvC,mBAAOc,EAAP,KAAgBC,EAAhB,KAkDA,SAAS3C,IACPc,EAAoBgB,EAAiBC,GACrCG,EAAgB,GAChBS,GAAW,GACXV,EAAS,GACTI,GAAc,GACdI,GAAW,GAGb,OA1DAG,qBAAU,WACR9B,EAAoBgB,EAAiBC,KACpC,IAEHa,qBAAU,WACJZ,GAAS,IACXE,GAAgB,SAACW,GAAD,OAAeA,EAAY,KAC3Cd,EAAS1B,EAASa,OAEnB,CAACc,IAEJY,qBAAU,WACRnB,aAAaqB,QAAQ,YAAavB,KAAKwB,UAAUzD,MAChD,CAACA,IAEJsD,qBAAU,WACRnB,aAAaqB,QAAQ,YAAavB,KAAKwB,WAAU,MAChD,CAACT,IA0CF,sBAAKxD,UAAU,cAAf,UACGwD,GACC,cAAC,EAAD,CACE5C,KAAMU,EACND,KAAK,WACLR,KAAMA,EACN4C,QAASA,EACT3C,YA5BY,SAACZ,GACnB,IAAQJ,EAASI,EAAMgE,OAAfpE,KACK,aAATA,EACF2D,GAAQ,SAACM,GAAD,OAAeA,EAAY,KACjB,SAATjE,EACT2D,GAAQ,SAACM,GAAD,OAAeA,EAAY,KAEnCtD,GAAa,MAwBZmD,GAAW,cAAC,EAAD,CAAQvC,KAAK,WAAWH,UAAWA,IAC9CwC,GAAW,cAAC,EAAD,CAAQrC,KAAK,UAAUH,UAAWA,IAE9C,cAAC,EAAD,CACEZ,OAAQ,CAAEC,eAAcC,aACxBC,aAAcA,IAEf6C,GACC,wBAAQrD,QAAS,kBDlFzB,SAAmBsD,EAAeN,GAChCM,GAAc,SAACQ,GAAD,OAAe,KAC7Bd,EAAS1B,EAASa,ICgFW+B,CAAUZ,EAAeN,IAAhD,wBAIF,sBAAMjD,UAAU,WAAhB,SACE,cAAC,EAAD,CAAQP,MAAOA,EAAOC,YA/DR,SAACI,EAAMD,GACzB,IAAMuE,EAAelB,GAASd,EAAUT,OAAS,EACjD,IAAKyC,EACH,OAAOT,GAAW,GAEpB,IAAIL,EAAJ,CACA,IAAMe,EAAgBvE,IAASiD,EAAaG,GAAb,KAE3BkB,GAAgBC,EAClBlB,GAAS,SAACY,GAAD,OAAeA,EAAY,MAEhCxD,EAAeC,GACjB6C,EAAa9C,GAEfsD,GAAW,IAEbZ,EAAS1B,EAASa,cC7DtBkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1c75d9ae.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Images(props) {\n  const { cards, handleClick } = props;\n\n  return cards.map((obj, index) => {\n    const { name, src } = obj;\n    return (\n      <div\n        className=\"cards-div\"\n        key={index}\n        onClick={(event) => handleClick(name)}\n      >\n        <img src={src} alt={`character ${name}`} />\n        <div className=\"char-name-div\">\n          <p className=\"char-name\">{name}</p>\n        </div>\n      </div>\n    );\n  });\n}\n\nexport default Images;\n","import card01 from \"../cards/01.jpg\";\nimport card02 from \"../cards/02.png\";\nimport card03 from \"../cards/03.png\";\nimport card04 from \"../cards/04.jpg\";\nimport card05 from \"../cards/05.png\";\nimport card06 from \"../cards/06.png\";\nimport card07 from \"../cards/07.png\";\nimport card08 from \"../cards/08.jpg\";\nimport card09 from \"../cards/09.png\";\nimport card10 from \"../cards/10.jpg\";\nimport card11 from \"../cards/11.jpg\";\nimport card12 from \"../cards/12.png\";\nimport card13 from \"../cards/13.png\";\nimport card14 from \"../cards/14.jpg\";\nimport card15 from \"../cards/15.png\";\n\nconst cardList = [\n  { name: \"Maka Albarn\", src: card01 },\n  { name: \"Mifune\", src: card02 },\n  { name: \"Tsubaki\", src: card03 },\n  { name: \"Arachne\", src: card04 },\n  { name: \"Stein\", src: card05 },\n  { name: \"Chrona\", src: card06 },\n  { name: \"Elizabeh\", src: card07 },\n  { name: \"Death-Sama\", src: card08 },\n  { name: \"Marie\", src: card09 },\n  { name: \"Soul\", src: card10 },\n  { name: \"Medusa\", src: card11 },\n  { name: \"Patty\", src: card12 },\n  { name: \"Death-Kid\", src: card13 },\n  { name: \"Spirit\", src: card14 },\n  { name: \"Black-Star\", src: card15 },\n];\n\nexport default cardList;\n","export default __webpack_public_path__ + \"static/media/01.c56507f7.jpg\";","export default __webpack_public_path__ + \"static/media/02.044547fa.png\";","export default __webpack_public_path__ + \"static/media/03.c61ef7c4.png\";","export default __webpack_public_path__ + \"static/media/04.619552bf.jpg\";","export default __webpack_public_path__ + \"static/media/05.63da99c8.png\";","export default __webpack_public_path__ + \"static/media/06.5fea2b12.png\";","export default __webpack_public_path__ + \"static/media/07.80c76790.png\";","export default __webpack_public_path__ + \"static/media/08.6de94511.jpg\";","export default __webpack_public_path__ + \"static/media/09.22ac170a.png\";","export default __webpack_public_path__ + \"static/media/10.b0bf4fa3.jpg\";","export default __webpack_public_path__ + \"static/media/11.df093b16.jpg\";","export default __webpack_public_path__ + \"static/media/12.dbb87314.png\";","export default __webpack_public_path__ + \"static/media/13.1715281b.png\";","export default __webpack_public_path__ + \"static/media/14.fdcc1308.jpg\";","export default __webpack_public_path__ + \"static/media/15.5cb7733e.png\";","function Navbar(props) {\n  const {currentScore, bestScore} = props.scores;\n  const {setFirstGame} = props\n  return (\n    <nav>\n      <div className=\"scores\">\n        <p>Current Score:</p>\n        <p>{currentScore} </p>\n      </div>\n      <div className=\"scores\">\n        <p>Best Score</p>\n        <p>{bestScore}</p>\n      </div>\n      <div className=\"scores\"><p class=\"redo-tutorial\" onClick={() => setFirstGame(true)}>?</p></div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","function Tutorial(props) {\n  const { data, step, handleModal } = props;\n  return (\n    <div className=\"tutorial-div\">\n      <h1 style={{textAlign: 'center'}}>{data[step]}</h1>\n      <div className=\"tutorial-div-buttons\">\n        {step > 0 && (\n          <button name=\"previous\" className=\"previous-button\" onClick={(event) => handleModal(event)}>\n            Previous\n          </button>\n        )}\n        <button name=\"finish\" className=\"finish-button\" onClick={(event) => handleModal(event)}>\n          Finish\n        </button>\n        {step < 2 && (\n          <button name=\"next\" className=\"next-button\" onClick={(event) => handleModal(event)}>\n            Next\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Tutorial;\n","import React from \"react\";\n\nfunction Game(props) {\n  const { resetGame } = props;\n  return (\n    <div className=\"endgame-modal\">\n      <h1>Game Over, try Again</h1>\n      <button onClick={() => resetGame()}>New Game</button>\n    </div>\n  );\n}\n\nexport default Game;\n","import React, {useState} from \"react\"\n\nfunction WinGame(props){\n  const {resetGame} = props\n  return(\n    <div className=\"win-modal\"> \n      <h1>Congrats, You won!</h1>\n      <button onClick={() => resetGame()}>New Game</button>\n    </div>\n    )\n}\n\nexport default WinGame\n","import React from \"react\";\nimport Tutorial from \"./Modals/Tutorial.js\";\nimport Game from \"./Modals/Game.js\";\nimport WinGame from \"./Modals/WinGame.js\"\n\nfunction Modals(props) {\n  const { data, step, handleModal, type, resetGame } = props;\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal\">\n        {type === \"tutorial\" && (\n          <Tutorial data={data} step={step} handleModal={handleModal} />\n        )}\n        {type === \"gameLost\" && <Game resetGame={resetGame} />}\n{type === \"gameWin\" && <WinGame resetGame={resetGame}  />}\n      </div>\n    </div>\n  );\n}\n\nexport default Modals;\n","const firstPage = \"This is A Memory Game, Where the Objective is to remember the sequence in which the cards are showed\";\nconst secondPage = \"After you record the sequence in which the cards are showed, you should click in the Start Button and the cards will shuffle\";\nconst thirdPage = \"Click In finish, record the sequence, Start the Game and good luck\";\nconst FirstGameContent = [firstPage, secondPage, thirdPage];\n\nexport default FirstGameContent;\n","import CardsList from \"./Components/cardImages.js\";\n\nfunction shuffler(array) {\n  const newArray = [...array];\n  for (let i = newArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n  }\n  return newArray;\n}\n\nfunction shuffledCardsSetter(firstSetter, secondSetter) {\n  const shuffled = shuffler(CardsList);\n  firstSetter(shuffled);\n  secondSetter(shuffled);\n}\n\nfunction getFromLocalStorage(item, altValue) {\n  const saved = JSON.parse(localStorage.getItem(item));\n  if (typeof saved === \"boolean\" && saved === false) {\n    return saved;\n  }\n  return saved || altValue;\n}\n\nfunction startGame(setFirstRound, setCards) {\n  setFirstRound((prevState) => false);\n  setCards(shuffler(CardsList));\n}\n\nexport { shuffler, shuffledCardsSetter, getFromLocalStorage, startGame };\n","import React, { useState, useEffect } from \"react\";\nimport Images from \"./Components/Images\";\nimport \"normalize.css\";\nimport \"./scss/style.scss\";\nimport CardsList from \"./Components/cardImages.js\";\nimport Navbar from \"./Components/Navbar.js\";\nimport Modals from \"./Components/Modals.js\";\nimport FirstGameContent from \"./Components/FirstGameContent.js\";\nimport {\n  shuffler,\n  shuffledCardsSetter,\n  getFromLocalStorage,\n  startGame,\n} from \"./helperFunctions\";\n\nfunction App() {\n  const [initialCards, setInitialCards] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [round, setRound] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(\n    getFromLocalStorage(\"bestScore\", 0)\n  );\n  const [firstRound, setFirstRound] = useState(true);\n  const [firstGame, setFirstGame] = useState(\n    getFromLocalStorage(\"firstGame\", true)\n  );\n  const [step, setStep] = useState(0);\n  const [winGame, setWinGame] = useState(false);\n  const [endGame, setEndGame] = useState(false);\n  useEffect(() => {\n    shuffledCardsSetter(setInitialCards, setCards);\n  }, []);\n\n  useEffect(() => {\n    if (round >= 1) {\n      setCurrentScore((prevState) => prevState + 1);\n      setCards(shuffler(CardsList));\n    }\n  }, [round]);\n\n  useEffect(() => {\n    localStorage.setItem(\"bestScore\", JSON.stringify(bestScore));\n  }, [bestScore]);\n\n  useEffect(() => {\n    localStorage.setItem(\"firstGame\", JSON.stringify(false));\n  }, [firstGame]);\n\n  const handleClick = (name, index) => {\n    const isFinalRound = round <= CardsList.length - 1;\n    if (!isFinalRound) {\n      return setWinGame(true);\n    }\n    if (firstRound) return;\n    const doesNameMatch = name === initialCards[round][\"name\"];\n\n    if (isFinalRound && doesNameMatch) {\n      setRound((prevState) => prevState + 1);\n    } else {\n      if (currentScore > bestScore) {\n        setBestScore(currentScore);\n      }\n      setEndGame(true);\n    }\n    setCards(shuffler(CardsList));\n  };\n\n  const handleModal = (event) => {\n    const { name } = event.target;\n    if (name === \"previous\") {\n      setStep((prevState) => prevState - 1);\n    } else if (name === \"next\") {\n      setStep((prevState) => prevState + 1);\n    } else {\n      setFirstGame(false);\n    }\n  };\n\n  function resetGame() {\n    shuffledCardsSetter(setInitialCards, setCards);\n    setCurrentScore(0);\n    setEndGame(false);\n    setRound(0);\n    setFirstRound(true);\n    setWinGame(false);\n  }\n\n  return (\n    <div className=\"content-div\">\n      {firstGame && (\n        <Modals\n          data={FirstGameContent}\n          type=\"tutorial\"\n          step={step}\n          setStep={setStep}\n          handleModal={handleModal}\n        />\n      )}\n      {endGame && <Modals type=\"gameLost\" resetGame={resetGame} />}\n      {winGame && <Modals type=\"gameWin\" resetGame={resetGame} />}\n\n      <Navbar\n        scores={{ currentScore, bestScore }}\n        setFirstGame={setFirstGame}\n      />\n      {firstRound && (\n        <button onClick={() => startGame(setFirstRound, setCards)}>\n          Start Game\n        </button>\n      )}\n      <main className=\"main-div\">\n        <Images cards={cards} handleClick={handleClick} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}